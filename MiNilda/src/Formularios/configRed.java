/*
 * BENGY JAMMIL AGUILA RUIZ
 * bengyjar1998@outlook.com
 * Facebook: https://www.facebook.com/0101114100d
 * Instagram: https://www.instagram.com/bengijammilaguilaruiz/?hl=es-la
 */
package Formularios;

import Controller.datosController;
import Controller.loginController;
import Modal.modalDatosConec;
import ds.desktop.notify.DesktopNotify;
import java.awt.MouseInfo;
import java.awt.Point;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.ImageIcon;
import util.AWTUtilities;

/**
 *
 * @author Bengy Aguila Ruiz bengyjar1998@outlook.com
 */
public class configRed extends javax.swing.JFrame {

    int x, y;

    datosController dc = new datosController();

    /**
     * Creates new form configRed
     */
    public configRed() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/Imagenes/icono.png")).getImage());
        //dc.leer();
        AWTUtilities.setOpaque(this, false);
        this.setLocationRelativeTo(null);
        //txtBd.setText(modalDatosConec.getNombrebd());
        //txtClave.setText(modalDatosConec.getClave());
        //txtIp.setText(modalDatosConec.getIp());
        //txtUser.setText(modalDatosConec.getUser());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnMinimizar = new rojeru_san.RSButtonRiple();
        btnExit = new rojeru_san.RSButtonRiple();
        txtIp = new rojerusan.RSMetroTextFullPlaceHolder();
        txtUser = new rojerusan.RSMetroTextFullPlaceHolder();
        txtClave = new rojerusan.RSMetroTextFullPlaceHolder();
        txtBd = new rojerusan.RSMetroTextFullPlaceHolder();
        jLabel2 = new javax.swing.JLabel();
        btntClean = new rojeru_san.RSButtonRiple();
        btnCancel = new rojeru_san.RSButtonRiple();
        btnGuardar = new rojeru_san.RSButtonRiple();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnMinimizar.setBackground(new java.awt.Color(77, 77, 77));
        btnMinimizar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        btnMinimizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/btn-minimizar.png"))); // NOI18N
        btnMinimizar.setToolTipText("Minimizar");
        btnMinimizar.setColorHover(new java.awt.Color(97, 97, 97));
        btnMinimizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinimizarActionPerformed(evt);
            }
        });
        getContentPane().add(btnMinimizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(565, 5, 30, 30));

        btnExit.setBackground(new java.awt.Color(77, 77, 77));
        btnExit.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/btn-cerrar.png"))); // NOI18N
        btnExit.setToolTipText("Cerrar");
        btnExit.setColorHover(new java.awt.Color(97, 97, 97));
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        getContentPane().add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(598, 5, 30, 30));

        txtIp.setForeground(new java.awt.Color(0, 0, 0));
        txtIp.setBorderColor(new java.awt.Color(31, 174, 255));
        txtIp.setBotonColor(new java.awt.Color(31, 174, 255));
        txtIp.setPlaceholder("Red Local/Ip");
        txtIp.setPreferredSize(new java.awt.Dimension(10, 48));
        txtIp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIpKeyTyped(evt);
            }
        });
        getContentPane().add(txtIp, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, 430, -1));

        txtUser.setForeground(new java.awt.Color(0, 0, 0));
        txtUser.setBorderColor(new java.awt.Color(31, 174, 255));
        txtUser.setBotonColor(new java.awt.Color(31, 174, 255));
        txtUser.setPlaceholder("USER");
        txtUser.setPreferredSize(new java.awt.Dimension(10, 48));
        txtUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUserKeyTyped(evt);
            }
        });
        getContentPane().add(txtUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 170, 430, -1));

        txtClave.setForeground(new java.awt.Color(0, 0, 0));
        txtClave.setBorderColor(new java.awt.Color(31, 174, 255));
        txtClave.setBotonColor(new java.awt.Color(31, 174, 255));
        txtClave.setPlaceholder("Clave BD");
        txtClave.setPreferredSize(new java.awt.Dimension(10, 48));
        txtClave.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtClaveKeyTyped(evt);
            }
        });
        getContentPane().add(txtClave, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 230, 430, -1));

        txtBd.setForeground(new java.awt.Color(0, 0, 0));
        txtBd.setBorderColor(new java.awt.Color(31, 174, 255));
        txtBd.setBotonColor(new java.awt.Color(31, 174, 255));
        txtBd.setPlaceholder("Nombre BD");
        txtBd.setPreferredSize(new java.awt.Dimension(10, 48));
        txtBd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBdKeyTyped(evt);
            }
        });
        getContentPane().add(txtBd, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 290, 430, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("CONFIGURACION DE RED");
        jLabel2.setToolTipText("");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 640, 45));

        btntClean.setBackground(new java.awt.Color(77, 77, 77));
        btntClean.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        btntClean.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/limpiar.png"))); // NOI18N
        btntClean.setText("Limpiar");
        btntClean.setColorHover(new java.awt.Color(97, 97, 97));
        btntClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntCleanActionPerformed(evt);
            }
        });
        getContentPane().add(btntClean, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 360, 120, 40));

        btnCancel.setBackground(new java.awt.Color(77, 77, 77));
        btnCancel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        btnCancel.setText("Cancelar");
        btnCancel.setColorHover(new java.awt.Color(97, 97, 97));
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        getContentPane().add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 360, 90, 40));

        btnGuardar.setBackground(new java.awt.Color(77, 77, 77));
        btnGuardar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        btnGuardar.setText("Guardar");
        btnGuardar.setColorHover(new java.awt.Color(97, 97, 97));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        getContentPane().add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 360, 90, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/red-1.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnMinimizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinimizarActionPerformed
        // TODO add your handling code here:
        this.setState(ICONIFIED);
    }//GEN-LAST:event_btnMinimizarActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed

        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        Point mueve = MouseInfo.getPointerInfo().getLocation();
        this.setLocation(mueve.x - x, mueve.y - y);
    }//GEN-LAST:event_formMouseDragged

    private void txtIpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIpKeyTyped

    }//GEN-LAST:event_txtIpKeyTyped

    private void txtUserKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserKeyTyped

    private void txtClaveKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtClaveKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClaveKeyTyped

    private void txtBdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBdKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBdKeyTyped

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        txtIp.requestFocus();        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btntCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntCleanActionPerformed
        txtIp.requestFocus();        // TODO add your handling code here:
        txtIp.setText("");
        txtClave.setText("");
        txtBd.setText("");
        txtUser.setText("");
    }//GEN-LAST:event_btntCleanActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        txtIp.requestFocus();
        modalDatosConec.setIp(txtIp.getText());
        modalDatosConec.setUser(txtUser.getText());
        modalDatosConec.setClave(txtClave.getText());
        modalDatosConec.setNombrebd(txtBd.getText());
        dc.guardar();
        dc.leer();

        loginController lc = new loginController();

        switch (lc.leer()) {
            case 0:
                FormNuevo fn = new FormNuevo();
                dispose();
                DesktopNotify.showDesktopMessage("Se A Configurado Correctamente La Conexion A La Base De Datos - Sistema De Gestion De Ventas  'Mi Nilda'", "bengyjar1998@outlook.com\n923244763", DesktopNotify.SUCCESS, 8000L);
               
             Timer timer = new Timer();
                
                TimerTask tarea = new TimerTask() {
                    @Override
                    public void run() {
                       fn.setVisible(true);
                        //System.exit(0);
                    }
                };
                timer.schedule(tarea, 5000);

                break;
            default:
                FormLogin fl = new FormLogin();
                dispose();
                fl.setVisible(true);
                break;
        }

    }//GEN-LAST:event_btnGuardarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(configRed.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(configRed.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(configRed.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(configRed.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new configRed().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojeru_san.RSButtonRiple btnCancel;
    private rojeru_san.RSButtonRiple btnExit;
    private rojeru_san.RSButtonRiple btnGuardar;
    private rojeru_san.RSButtonRiple btnMinimizar;
    private rojeru_san.RSButtonRiple btntClean;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private rojerusan.RSMetroTextFullPlaceHolder txtBd;
    private rojerusan.RSMetroTextFullPlaceHolder txtClave;
    private rojerusan.RSMetroTextFullPlaceHolder txtIp;
    private rojerusan.RSMetroTextFullPlaceHolder txtUser;
    // End of variables declaration//GEN-END:variables
}

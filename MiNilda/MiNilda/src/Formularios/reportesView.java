/*
 * BENGY JAMMIL AGUILA RUIZ
 * bengyjar1998@outlook.com
 * Facebook: https://www.facebook.com/0101114100d
 * Instagram: https://www.instagram.com/bengijammilaguilaruiz/?hl=es-la
 */
package Formularios;

import Alertas.ErrorAlerta;
import Alertas.ExitoAlerta;
import Controller.ReportesController;
import excel.ReportesExcel;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;

/**
 *
 * @author Lenovo
 */
public class reportesView extends javax.swing.JInternalFrame {

    ReportesController rc = new ReportesController();
    ReportesExcel re = new ReportesExcel();

    /**
     * Creates new form CategoriaView
     *
     */
    public reportesView() {
        initComponents();
        //this.setUI(null);
        tblReportesVentas.getTableHeader().setDefaultRenderer(new util.EstiloTablaHeader());
        tblReportesVentas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblReportesVentas.setDefaultRenderer(Object.class, new util.EstiloTablaRendererCenter());
        DecimalFormatSymbols separadoresPersonalizados = new DecimalFormatSymbols();
        separadoresPersonalizados.setDecimalSeparator('.');
        DecimalFormat formato = new DecimalFormat("#.###", separadoresPersonalizados);
        txtSubTotal.setText("S/. " + formato.format(rc.totalGeneral() - (rc.totalGeneral() * 0.18)));
        txtIgvGeneral.setText("S/. " + formato.format(rc.totalGeneral() * 0.18));
        txtGeneral.setText("S/. " + formato.format(rc.totalGeneral()));
        rc.ReporteVenta(tblReportesVentas, "", "", "");
        // rc.ReporteVentas(tblReportesVentas, "", "", "");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlusuarios = new javax.swing.JPanel();
        jPanel26 = new javax.swing.JPanel();
        cboReporte = new rojerusan.RSComboMetro();
        calendario1 = new rojeru_san.componentes.RSDateChooser();
        jPanel7 = new javax.swing.JPanel();
        txtNumeroVenta = new app.bolivia.swing.JCTextField();
        btn2 = new rojeru_san.RSButtonRiple();
        calendario = new rojeru_san.componentes.RSDateChooser();
        btnBuscar = new rojeru_san.RSButtonRiple();
        btnLimpiar = new rojeru_san.RSButtonRiple();
        btnImprimir1 = new rojeru_san.RSButtonRiple();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblReportesVentas = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtSubTotal = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtIgvGeneral = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtGeneral = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Reportes");
        setToolTipText("");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8_business_report_48px.png"))); // NOI18N
        setPreferredSize(new java.awt.Dimension(1523, 862));
        setVisible(true);

        pnlusuarios.setBackground(new java.awt.Color(255, 255, 255));

        jPanel26.setBackground(new java.awt.Color(255, 255, 255));
        jPanel26.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Opciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18))); // NOI18N

        cboReporte.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ventas", "Boleta", "Factura" }));
        cboReporte.setColorBorde(new java.awt.Color(0, 0, 0));
        cboReporte.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cboReporte.setMinimumSize(new java.awt.Dimension(101, 28));
        cboReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboReporteActionPerformed(evt);
            }
        });
        cboReporte.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cboReporteKeyReleased(evt);
            }
        });

        calendario1.setToolTipText("");
        calendario1.setColorBackground(new java.awt.Color(0, 112, 192));
        calendario1.setColorButtonHover(new java.awt.Color(0, 112, 192));
        calendario1.setColorForeground(new java.awt.Color(0, 112, 192));
        calendario1.setEnabled(false);
        calendario1.setFormatoFecha("yyyy-MM-dd");
        calendario1.setName(""); // NOI18N
        calendario1.setPlaceholder("SELECCIONAR FECHA");

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 112, 192), 2));
        jPanel7.setPreferredSize(new java.awt.Dimension(395, 52));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtNumeroVenta.setBorder(null);
        txtNumeroVenta.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtNumeroVenta.setPhColor(new java.awt.Color(0, 112, 192));
        txtNumeroVenta.setPlaceholder("NÂ° Venta...");
        txtNumeroVenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNumeroVentaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroVentaKeyTyped(evt);
            }
        });
        jPanel7.add(txtNumeroVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 2, 100, 40));

        btn2.setBackground(new java.awt.Color(255, 255, 255));
        btn2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/btn-cerrar.png"))); // NOI18N
        btn2.setColorHover(new java.awt.Color(31, 174, 255));
        btn2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn2MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn2MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btn2MouseReleased(evt);
            }
        });
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });
        jPanel7.add(btn2, new org.netbeans.lib.awtextra.AbsoluteConstraints(113, 6, 35, 35));

        calendario.setToolTipText("");
        calendario.setColorBackground(new java.awt.Color(0, 112, 192));
        calendario.setColorButtonHover(new java.awt.Color(0, 112, 192));
        calendario.setColorForeground(new java.awt.Color(0, 112, 192));
        calendario.setEnabled(false);
        calendario.setFormatoFecha("yyyy-MM-dd");
        calendario.setName(""); // NOI18N
        calendario.setOpaque(true);
        calendario.setPlaceholder("SELECCIONAR FECHA");

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/buscar.png"))); // NOI18N
        btnBuscar.setText("BUSCAR ");
        btnBuscar.setToolTipText("");
        btnBuscar.setFont(new java.awt.Font("Roboto Bold", 1, 18)); // NOI18N
        btnBuscar.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        btnBuscar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/buscar1.png"))); // NOI18N
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/limpiar.png"))); // NOI18N
        btnLimpiar.setToolTipText("Limpiar Campos");
        btnLimpiar.setFont(new java.awt.Font("Roboto Bold", 1, 18)); // NOI18N
        btnLimpiar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnLimpiar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/limpiar1.png"))); // NOI18N
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnImprimir1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/excel.png"))); // NOI18N
        btnImprimir1.setText("Excel");
        btnImprimir1.setToolTipText("Exportar A Excel");
        btnImprimir1.setFont(new java.awt.Font("Roboto Bold", 1, 18)); // NOI18N
        btnImprimir1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnImprimir1.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/excel2.png"))); // NOI18N
        btnImprimir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimir1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cboReporte, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(calendario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(calendario1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnImprimir1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnImprimir1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cboReporte, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(calendario1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(calendario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(21, 21, 21))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Reportes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18))); // NOI18N
        jPanel1.setLayout(new java.awt.BorderLayout());

        tblReportesVentas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblReportesVentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NÂ° Venta", "Producto", "U.M", "Precio", "Cantidad", "Total", "Igv_Venta", "Sub TT Venta", "TT Venta", "Fecha", "Hora"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblReportesVentas.setGridColor(new java.awt.Color(0, 0, 0));
        tblReportesVentas.setRowHeight(20);
        tblReportesVentas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblReportesVentasKeyReleased(evt);
            }
        });
        jScrollPane4.setViewportView(tblReportesVentas);

        jPanel1.add(jScrollPane4, java.awt.BorderLayout.CENTER);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(1471, 50));
        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Sub Total General:");
        jPanel2.add(jLabel1);

        txtSubTotal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtSubTotal.setText("jLabel1");
        jPanel2.add(txtSubTotal);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Igv General:");
        jPanel2.add(jLabel3);

        txtIgvGeneral.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtIgvGeneral.setText("jLabel1");
        jPanel2.add(txtIgvGeneral);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Total General:");
        jPanel2.add(jLabel5);

        txtGeneral.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtGeneral.setText("jLabel1");
        jPanel2.add(txtGeneral);

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_END);

        javax.swing.GroupLayout pnlusuariosLayout = new javax.swing.GroupLayout(pnlusuarios);
        pnlusuarios.setLayout(pnlusuariosLayout);
        pnlusuariosLayout.setHorizontalGroup(
            pnlusuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlusuariosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlusuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel26, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlusuariosLayout.setVerticalGroup(
            pnlusuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlusuariosLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 665, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(pnlusuarios, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblReportesVentasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblReportesVentasKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tblReportesVentasKeyReleased

    private void cboReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboReporteActionPerformed
        DefaultTableModel model = new DefaultTableModel() {
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false, false, false, false, false, false
            };

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        };
        String reporte = cboReporte.getSelectedItem().toString();
// "Id Boleta", "Cliente", "Vendedor", "Producto", "Precio", "Cantidad", "Total", "Igv_Venta", "Sub TT Venta", "TT Venta", "Fecha", "Hora"
//"NÂ° Venta", "Producto", "U.M", "Precio", "Cantidad", "Total", "Igv_Venta", "Sub TT Venta", "TT Venta", "Fecha", "Hora"
        switch (reporte) {
            case "Ventas":
                model.addColumn("NÂ° Venta");
                model.addColumn("Producto");
                model.addColumn("U.M");
                model.addColumn("Precio");
                model.addColumn("Cantidad");
                model.addColumn("Total");
                model.addColumn("Igv_Venta");
                model.addColumn("Sub TT Venta");
                model.addColumn("TT Venta");
                model.addColumn("Fecha");
                model.addColumn("Hora");
                tblReportesVentas.setModel(model);
                rc.ReporteVenta(tblReportesVentas, "", "", "");

                txtNumeroVenta.setPlaceholder("NÂ° Venta...");
                break;
            case "Boleta":

                model.addColumn("Id Boleta");
                model.addColumn("Cliente");
                model.addColumn("Vendedor");
                model.addColumn("Producto");
                model.addColumn("Precio");
                model.addColumn("Cantidad");
                model.addColumn("Total");
                model.addColumn("Igv_Venta");
                model.addColumn("Sub TT Venta");
                model.addColumn("TT Venta");
                model.addColumn("Fecha");
                model.addColumn("Hora");
                tblReportesVentas.setModel(model);
                rc.ReporteVentaBoleta(tblReportesVentas, "", "", "");

                txtNumeroVenta.setPlaceholder("NÂ° Boleta...");

                //System.out.println("1");
                break;
            case "Factura":

                model.addColumn("Id Factura");
                model.addColumn("N.Comercial");
                model.addColumn("Ruc");
                model.addColumn("Vendedor");
                model.addColumn("Producto");
                model.addColumn("Cantidad");
                model.addColumn("Precio");
                model.addColumn("Total");
                model.addColumn("Igv_Venta");
                model.addColumn("Sub TT Venta");
                model.addColumn("TT Venta");
                model.addColumn("Fecha");
                model.addColumn("Hora");
                tblReportesVentas.setModel(model);

                txtNumeroVenta.setPlaceholder("NÂº Factura");
                rc.ReporteVentaFactura(tblReportesVentas, "", "", "");
                // System.out.println("2");
                break;
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_cboReporteActionPerformed

    private void txtNumeroVentaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroVentaKeyTyped
        /*       String reporte = cboReporte.getSelectedItem().toString();

        switch (reporte) {
            case "Boleta":
                rc.ReporteVentas(tblReportesVentas, "", "", "");
                txtNumeroVenta.setPlaceholder("NÂ° Boleta...");
                // txtNumeroVenta.setPlaceholder("NÂ° Venta...");
                /* char caracter = evt.getKeyChar();
                if (((caracter < '0') || (caracter > '9'))
                        && (caracter != KeyEvent.VK_BACK_SPACE)) {
                    evt.consume();
                }
                break;
            case "Factura":
                txtNumeroVenta.setPlaceholder("NÂº Factura");
                //char letras = evt.getKeyChar();
                /*if ((letras < 'a' || letras > 'z') && (letras < 'A' | letras > 'Z')) {
                    if ((letras != 'Ã±') && (letras != 'Ã') && (letras != 'Ã¡') && (letras != 'Ã') && (letras != 'Ã©') && (letras != 'Ã') && (letras != 'Ã­')
                            && (letras != 'Ã') && (letras != 'Ã³') && (letras != 'Ã') && (letras != 'Ãº') && (letras != 'Ã') && (letras != '.') && (letras != ' ')) {
                        evt.consume();
                    }
                }
                break;
        }*/

        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroVentaKeyTyped

    private void btn2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn2MouseEntered
        btn2.setBackground(new java.awt.Color(31, 174, 255));
    }//GEN-LAST:event_btn2MouseEntered

    private void btn2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn2MouseExited
        btn2.setBackground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_btn2MouseExited

    private void btn2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn2MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn2MousePressed

    private void btn2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn2MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_btn2MouseReleased

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        txtNumeroVenta.setText("");
        txtNumeroVenta.requestFocus();
    }//GEN-LAST:event_btn2ActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        /*
        DefaultTableModel modelo1;
        modelo1=new DefaultTableModel();   //ASIGNAMOS UN NUEVO DEFAULTABLEMODEL AL OBJETO MODELO1
        modelo1.addColumn("Nombres");      //LE AÃADIMOS COLUMNAS AL OBJETO MODELO
        modelo1.addColumn("Apellidos");
        tblReportes.setModel(modelo1);   */

        // System.out.println("Views.reporteView.btnLimpiar1ActionPerformed()" + calendario1.getFormatoFecha());
        String format = "yyyy-MM-dd";//yyyy-MM-dd
        Date buscar1 = (Date) calendario.getDatoFecha();
        Date buscar2 = calendario1.getDatoFecha();
        SimpleDateFormat dateFormat = new SimpleDateFormat(format);
        String nVenta = txtNumeroVenta.getText();

        String reporte = cboReporte.getSelectedItem().toString();

        switch (reporte) {
            case "Ventas":
                if (calendario.getDatoFecha() == null && calendario1.getDatoFecha() == null && txtNumeroVenta.getText().isEmpty()) {
                    rc.ReporteVenta(tblReportesVentas, "", "", "");

                } else if (calendario.getDatoFecha() == null && calendario1.getDatoFecha() == null) {

                    rc.ReporteVenta(tblReportesVentas, nVenta, "", "");

                } else if (txtNumeroVenta.getText().isEmpty()) {
                    rc.ReporteVenta(tblReportesVentas, "", dateFormat.format(buscar1), dateFormat.format(buscar2));

                } else {
                    rc.ReporteVenta(tblReportesVentas, nVenta, dateFormat.format(buscar1), dateFormat.format(buscar2));

                }

                break;
            case "Boleta":

                if (calendario.getDatoFecha() == null && calendario1.getDatoFecha() == null && txtNumeroVenta.getText().isEmpty()) {
                    rc.ReporteVentaBoleta(tblReportesVentas, "", "", "");

                } else if (calendario.getDatoFecha() == null && calendario1.getDatoFecha() == null) {

                    rc.ReporteVentaBoleta(tblReportesVentas, nVenta, "", "");

                } else if (txtNumeroVenta.getText().isEmpty()) {
                    rc.ReporteVentaBoleta(tblReportesVentas, "", dateFormat.format(buscar1), dateFormat.format(buscar2));

                } else {
                    rc.ReporteVentaBoleta(tblReportesVentas, nVenta, dateFormat.format(buscar1), dateFormat.format(buscar2));

                }

                break;

            case "Factura":
                if (calendario.getDatoFecha() == null && calendario1.getDatoFecha() == null && txtNumeroVenta.getText().isEmpty()) {
                    rc.ReporteVentaFactura(tblReportesVentas, "", "", "");

                } else if (calendario.getDatoFecha() == null && calendario1.getDatoFecha() == null) {

                    rc.ReporteVentaFactura(tblReportesVentas, nVenta, "", "");

                } else if (txtNumeroVenta.getText().isEmpty()) {
                    rc.ReporteVentaFactura(tblReportesVentas, "", dateFormat.format(buscar1), dateFormat.format(buscar2));

                } else {
                    rc.ReporteVentaFactura(tblReportesVentas, nVenta, dateFormat.format(buscar1), dateFormat.format(buscar2));

                }

                break;
        }

        /* else {
            if (cboReporte.getSelectedItem().toString().equals("REPORTE")) {
                // System.out.println("Views.reporteView.btnLimpiar1ActionPerformed() -  " + buscar22);
                rc.ListarReporte(tblReportes, dateFormat.format(buscar1), dateFormat.format(buscar2));
                calendario1.setDatoFecha(null);
                calendario2.setDatoFecha(null);
            } else if (cboReporte.getSelectedItem().toString().equals("POR VENTA")) {
                String buscar = txtbuscar.getText();
                rc.ListarReporteFechaNumero(tblReportes, dateFormat.format(buscar1), dateFormat.format(buscar2), buscar);
            }
        }
         */
        // if (cboReporte.getSelectedItem().toString().equals("POR PRODUCTO")) {
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed

        String reporte = cboReporte.getSelectedItem().toString();

        switch (reporte) {
            case "Ventas":
                rc.ReporteVenta(tblReportesVentas, "", "", "");
                break;
            case "Boleta":

                rc.ReporteVentaBoleta(tblReportesVentas, "", "", "");

                break;
            case "Factura":
                rc.ReporteVentaFactura(tblReportesVentas, "", "", "");
                break;
        }

        txtNumeroVenta.setText("");
        calendario.setDatoFecha(null);
        calendario1.setDatoFecha(null);

    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void cboReporteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cboReporteKeyReleased

    }//GEN-LAST:event_cboReporteKeyReleased

    private void txtNumeroVentaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroVentaKeyReleased
        String reporte = cboReporte.getSelectedItem().toString();
        String nVenta = txtNumeroVenta.getText();
        switch (reporte) {
            case "Ventas":
                rc.ReporteVenta(tblReportesVentas, nVenta, "", "");
                break;
            case "Boleta":
                rc.ReporteVentaBoleta(tblReportesVentas, nVenta, "", "");
                //rc.ReporteVentas(tblReportesVentas, "", "", "");
                break;
            case "Factura":
                rc.ReporteVentaFactura(tblReportesVentas, nVenta, "", "");
                break;
        }
    }//GEN-LAST:event_txtNumeroVentaKeyReleased

    private void btnImprimir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimir1ActionPerformed
       String format = "yyyy-MM-dd";//yyyy-MM-dd
        Date buscar1 = (Date) calendario.getDatoFecha();
        Date buscar2 = calendario1.getDatoFecha();
        SimpleDateFormat dateFormat = new SimpleDateFormat(format);
        String nVenta = txtNumeroVenta.getText();

        String reporte = cboReporte.getSelectedItem().toString();

        switch (reporte) {
            case "Ventas":

                List<String> headerValues = ReportesExcel.getTableHeadersVentas();

                if (calendario.getDatoFecha() == null && calendario1.getDatoFecha() == null && txtNumeroVenta.getText().isEmpty()) {

                    List<List<String>> contentRowValues = re.ExportVenta("", "", "", 20);
                    generarExcel(headerValues, contentRowValues, "Ventas");
                    System.out.println("se ejecuto1");
                    //System.out.println(""+ contentRowValues);
                    //rc.ReporteVenta(tblReportesVentas, "", "", "");

                } else if (calendario.getDatoFecha() == null && calendario1.getDatoFecha() == null) {

                    //rc.ReporteVenta(tblReportesVentas, nVenta, "", "");
                    List<List<String>> contentRowValues = re.ExportVenta(nVenta, "", "", 20);
                    generarExcel(headerValues, contentRowValues, "Ventas");
                    System.out.println("se ejecuto2");

                } else if (txtNumeroVenta.getText().isEmpty()) {
                    // rc.ReporteVenta(tblReportesVentas, "", dateFormat.format(buscar1), dateFormat.format(buscar2));
                    List<List<String>> contentRowValues = re.ExportVenta("", dateFormat.format(buscar1), dateFormat.format(buscar2), 20);
                    generarExcel(headerValues, contentRowValues, "Ventas");
                    System.out.println("se ejecuto3");

                } else {
                    //rc.ReporteVenta(tblReportesVentas, nVenta, dateFormat.format(buscar1), dateFormat.format(buscar2));
                   // System.out.println("" + dateFormat.format(buscar1) + "--" + dateFormat.format(buscar2));
                   // System.out.println("" + re.ExportVenta(nVenta, fechaInicio, fechaFin, 20));
                    List<List<String>> contentRowValues = re.ExportVenta(nVenta, dateFormat.format(buscar1), dateFormat.format(buscar2), 20);
                    generarExcel(headerValues, contentRowValues, "Ventas");

                }

                break;
            case "Boleta":

                List<String> headerValues1 = ReportesExcel.getTableHeadersBoleta();

                if (calendario.getDatoFecha() == null && calendario1.getDatoFecha() == null && txtNumeroVenta.getText().isEmpty()) {

                    List<List<String>> contentRowValues = re.ExportBoleta("", "", "", 20);
                    generarExcel(headerValues1, contentRowValues, "Boleta");
                    //System.out.println(""+ contentRowValues);
                    //rc.ReporteVenta(tblReportesVentas, "", "", "");

                } else if (calendario.getDatoFecha() == null && calendario1.getDatoFecha() == null) {

                    //rc.ReporteVenta(tblReportesVentas, nVenta, "", "");
                    List<List<String>> contentRowValues = re.ExportBoleta(nVenta, "", "", 20);
                    generarExcel(headerValues1, contentRowValues, "Boleta");

                } else if (txtNumeroVenta.getText().isEmpty()) {
                    // rc.ReporteVenta(tblReportesVentas, "", dateFormat.format(buscar1), dateFormat.format(buscar2));
                    List<List<String>> contentRowValues = re.ExportBoleta("", dateFormat.format(buscar1), dateFormat.format(buscar2), 20);
                    generarExcel(headerValues1, contentRowValues, "Boleta");

                } else {
                    //rc.ReporteVenta(tblReportesVentas, nVenta, dateFormat.format(buscar1), dateFormat.format(buscar2));
                    List<List<String>> contentRowValues = re.ExportBoleta(nVenta, dateFormat.format(buscar1), dateFormat.format(buscar2), 20);
                    generarExcel(headerValues1, contentRowValues, "Boleta");

                }

                break;

            case "Factura":
                List<String> headerValues2 = ReportesExcel.getTableHeadersFactura();

                if (calendario.getDatoFecha() == null && calendario1.getDatoFecha() == null && txtNumeroVenta.getText().isEmpty()) {

                    List<List<String>> contentRowValues = re.ExportFactura("", "", "", 20);
                    generarExcel(headerValues2, contentRowValues, "Factura");
                    //System.out.println(""+ contentRowValues);
                    //rc.ReporteVenta(tblReportesVentas, "", "", "");

                } else if (calendario.getDatoFecha() == null && calendario1.getDatoFecha() == null) {

                    //rc.ReporteVenta(tblReportesVentas, nVenta, "", "");
                    List<List<String>> contentRowValues = re.ExportFactura(nVenta, "", "", 20);
                    generarExcel(headerValues2, contentRowValues, "Factura");

                } else if (txtNumeroVenta.getText().isEmpty()) {
                    // rc.ReporteVenta(tblReportesVentas, "", dateFormat.format(buscar1), dateFormat.format(buscar2));
                    List<List<String>> contentRowValues = re.ExportFactura("", dateFormat.format(buscar1), dateFormat.format(buscar2), 20);
                    generarExcel(headerValues2, contentRowValues, "Factura");

                } else {
                    //rc.ReporteVenta(tblReportesVentas, nVenta, dateFormat.format(buscar1), dateFormat.format(buscar2));
                    List<List<String>> contentRowValues = re.ExportFactura(nVenta, dateFormat.format(buscar1), dateFormat.format(buscar2), 20);
                    generarExcel(headerValues2, contentRowValues, "Factura");

                }

                break;
        }
    }//GEN-LAST:event_btnImprimir1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojeru_san.RSButtonRiple btn2;
    private rojeru_san.RSButtonRiple btnBuscar;
    private rojeru_san.RSButtonRiple btnImprimir1;
    private rojeru_san.RSButtonRiple btnLimpiar;
    private rojeru_san.componentes.RSDateChooser calendario;
    private rojeru_san.componentes.RSDateChooser calendario1;
    public static rojerusan.RSComboMetro cboReporte;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel pnlusuarios;
    private javax.swing.JTable tblReportesVentas;
    private javax.swing.JLabel txtGeneral;
    private javax.swing.JLabel txtIgvGeneral;
    private app.bolivia.swing.JCTextField txtNumeroVenta;
    private javax.swing.JLabel txtSubTotal;
    // End of variables declaration//GEN-END:variables

    private void generarExcel(List<String> headerValues, List<List<String>> contentRowValues, String nombre) {
        // List<String> headerValues = FakeDataProvider.getTableHeaders();
        // List<List<String>> contentRowValues = FakeDataProvider.getTableContent(20);

        HSSFWorkbook workbook = new excel.ExcelGenerator().generateExcel(headerValues, contentRowValues, nombre);
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos Excel (*.xls)", "xls");
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.setFileFilter(filter);
        fileChooser.setDialogTitle("GUARDAR ARCHIVO");
        if (fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {

            try {
                File archivo = new File(fileChooser.getSelectedFile().getAbsolutePath());

                OutputStream out = null;
                if (getFileExtension(archivo)) {
                    out = new FileOutputStream(fileChooser.getSelectedFile().getAbsolutePath());
                } else {
                    out = new FileOutputStream(fileChooser.getSelectedFile().getAbsolutePath() + ".xls");
                }

                //JOptionPane.showMessageDialog(this, "Archivo generado con Ã©xito");
                ExitoAlerta ae = new ExitoAlerta(null, true);
                ExitoAlerta.lblMensaje1.setText("Â¡Â¡Â¡ARCHIVO!!!");
                ExitoAlerta.lblMensaje2.setText("Â¡Â¡Â¡GENERADO CON EXITO!!!");
                ae.setVisible(true);

                workbook.write(out);
                workbook.close();
                out.flush();
                out.close();
            } catch (IOException ex) {

                ErrorAlerta ae = new ErrorAlerta(null, true);
                ErrorAlerta.lblMensaje2.setText("Â¡Â¡Â¡ARCHIVO NO GENERADO!!!");
                ae.setVisible(true);
                Logger.getLogger(reportesView.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

    private boolean getFileExtension(File file) {
        String ext = null;
        String s = file.getName();
        int i = s.lastIndexOf('.');

        if (i > 0 && i < s.length() - 1) {
            ext = s.substring(i + 1).toLowerCase();
        }

        if (ext != null) {
            return true;
        } else {
            return false;
        }
    }
}
